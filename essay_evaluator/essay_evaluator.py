import asyncio
import websockets
from pydantic_ai import Agent
from dotenv import load_dotenv
import os

load_dotenv()
os.makedirs("logs", exist_ok=True)

evaluator_agent = Agent(
    'google-gla:gemini-1.5-flash',
    system_prompt="""
–¢—ã –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏ —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –æ—Ü–µ–Ω–∫–µ —ç—Å—Å–µ. 
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ —ç—Å—Å–µ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º:

1. **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è** (0-25 –±–∞–ª–ª–æ–≤)
   - –õ–æ–≥–∏—á–Ω–æ—Å—Ç—å –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è
   - –ù–∞–ª–∏—á–∏–µ –≤–≤–µ–¥–µ–Ω–∏—è, –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Å—Ç–∏, –∑–∞–∫–ª—é—á–µ–Ω–∏—è
   - –ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É –∞–±–∑–∞—Ü–∞–º–∏

2. **–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏—è** (0-25 –±–∞–ª–ª–æ–≤)
   - –ì–ª—É–±–∏–Ω–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç–µ–º—ã
   - –ö–∞—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–∏–º–µ—Ä–æ–≤
   - –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ–º–µ

3. **–°—Ç–∏–ª—å –∏ —è–∑—ã–∫** (0-25 –±–∞–ª–ª–æ–≤)
   - –Ø—Å–Ω–æ—Å—Ç—å –∏–∑–ª–æ–∂–µ–Ω–∏—è
   - –ë–æ–≥–∞—Ç—Å—Ç–≤–æ –ª–µ–∫—Å–∏–∫–∏
   - –ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å

4. **–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å** (0-25 –±–∞–ª–ª–æ–≤)
   - –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥
   - –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–¥–µ–∏ –∏ –≤—ã–≤–æ–¥—ã

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
# üìù –û–¶–ï–ù–ö–ê –≠–°–°–ï

## üéØ –¢–µ–º–∞: [—Ç–µ–º–∞ —ç—Å—Å–µ]

## üìä –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞:

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: X/25
[–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]

### –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏—è: X/25  
[–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]

### –°—Ç–∏–ª—å –∏ —è–∑—ã–∫: X/25
[–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]

### –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å: X/25
[–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]

## üéñÔ∏è –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê: X/100

## ‚úÖ –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:
- [–ø—É–Ω–∫—Ç 1]
- [–ø—É–Ω–∫—Ç 2]

## üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é:
- [–ø—É–Ω–∫—Ç 1]
- [–ø—É–Ω–∫—Ç 2]

## üìù –û–±—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:
[–æ–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è]

–ë—É–¥—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–º –∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º –≤ –æ—Ü–µ–Ω–∫–µ.
"""
)

async def evaluate_essay(essay_data):
    return await evaluator_agent.run(essay_data)

async def essay_evaluator_agent():
    async with websockets.connect("ws://localhost:8765") as ws:
        await ws.send("register:essay_evaluator")
        
        while True:
            essay_data = await ws.recv()
            print(f"[Essay Evaluator] –ü–æ–ª—É—á–µ–Ω–æ —ç—Å—Å–µ –¥–ª—è –æ—Ü–µ–Ω–∫–∏")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–º—É –∏ —ç—Å—Å–µ
            lines = essay_data.split('\n')
            topic = lines[0].replace('TOPIC: ', '') if lines[0].startswith('TOPIC: ') else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
            essay_start = essay_data.find('ESSAY:\n') + 7
            essay_content = essay_data[essay_start:] if essay_start > 6 else essay_data
            
            print(f"[Essay Evaluator] –¢–µ–º–∞: {topic}")
            print(f"[Essay Evaluator] –î–ª–∏–Ω–∞ —ç—Å—Å–µ: {len(essay_content)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º –æ—Ü–µ–Ω–∫—É
                evaluation = await evaluate_essay(essay_data)
                evaluation_text = evaluation.output
                
                # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
                if len(evaluation_text) > 2000:
                    evaluation_text = evaluation_text[:1900] + "\n\n‚ö†Ô∏è –û—Ü–µ–Ω–∫–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."
                
                print(f"[Essay Evaluator] –û—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–∞, –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é...")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ü–µ–Ω–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await ws.send(f"send:user:{evaluation_text}")
                
                # –õ–æ–≥–∏—Ä—É–µ–º –≤ —Ñ–∞–π–ª
                with open("logs/essay_evaluations.log", "a", encoding="utf-8") as f:
                    f.write(f"\n{'='*50}\n")
                    f.write(f"–¢–ï–ú–ê: {topic}\n")
                    f.write(f"–î–ê–¢–ê: {asyncio.get_event_loop().time()}\n")
                    f.write(f"\n–≠–°–°–ï:\n{essay_content}\n")
                    f.write(f"\n–û–¶–ï–ù–ö–ê:\n{evaluation_text}\n")
                    f.write(f"{'='*50}\n")
                
            except Exception as e:
                error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ü–µ–Ω–∫–µ —ç—Å—Å–µ: {str(e)}"
                print(f"[Essay Evaluator] {error_msg}")
                await ws.send(f"send:user:{error_msg}")

if __name__ == "__main__":
    asyncio.run(essay_evaluator_agent())